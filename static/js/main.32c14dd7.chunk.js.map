{"version":3,"sources":["serviceWorker.js","Components/LoadingScreen.js","Components/HeaderRow.js","Components/TitleRow.js","Components/MiscComponentUtilities.js","Components/ArticleColumnContainer.js","Components/CenterFrame.js","Components/SideNavigationBar.js","Components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","LoadingScreen","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadingScreenWorthShowing","shutOffDelayer","inherits","createClass","key","value","clearInterval","_this2","dataIsLoaded","_this$state","renderedComponent","loadingScreenClass","setState","setTimeout","loadingBars","loadingBarIndex","loadingBarWaitTime","style","width","height","paddingTop","animation","concat","parseInt","animationDelay","color","fontSize","fontFamily","textAlign","push","react_default","a","createElement","className","Component","HeaderRow","firstShownResearchFieldIndex","numberOfResearchFieldsShownMostRecently","currentlyShownResearchFields","headerRowResearchFieldLoopingInterval","researchFields","updatedFirstShownResearchFieldIndex","length","estimatedNumberOfHeaderRowCharactersAvailable","innerWidth","nextResearchFieldsToShow","currentlyShownResearchFieldIndex","nextResearchField","updateCurrentlyShownResearchFields","setInterval","initializeHeaderRowResearchFieldLoopingInterval","goToResearchFieldAtIndexMethod","id","map","researchField","index","indexForCurrentResearchField","onClick","href","TitleRow","apply","arguments","_this$props","sideNavigationBarOpenStateChangingMethod","goToPreviousResearchFieldMethod","goToNextResearchFieldMethod","researchFieldOfCurrentlyDisplayedArticles","toggleSideBarText","sideNavigationBarIsOpen","renderResearchPaperJSONObjectForDisplay","researchPaperJSONObject","page_link","research_paper_title","primary_subject","secondary_subjects","author_info","abstract","renderedAuthorInfo","authorInfoJSONOBject","authorIndex","author","author_link","target","rel","join","ArticleColumnContainer","JSONObjectsForCurrentlyDisplayedArticles","researchFieldToResearchPaperJSONObjectsMapping","firstColumnArticleJSONObjects","secondColumnArticleJSONObjects","thirdColumnArticleJSONObjects","firstColumnHeightEstimation","secondColumnHeightEstimation","thirdColumnHeightEstimation","forEach","JSONObject","smallestCount","Math","min","articleHeightEstimation","warn","firstColumnRendered","secondColumnRendered","thirdColumnRendered","indexResearchPaperJSONObjectsByResearchField","researchPaperJSONObjects","research_field","CenterFrame","TitleRow_TitleRow","ArticleColumnContainer_ArticleColumnContainer","SideNavigationBar","classForRendering","App","bind","assertThisInitialized","goToResearchFieldAtIndex","changeSideNavigationBarOpenState","allResearchPaperJSONObjects","document","getElementsByTagName","innerText","fetch","res","json","researchFieldsViaJSON","nonUniqueList","researchFieldsNonUnique","filter","element","indexOf","sort","parseArxivWebserviceForUniqueResearchFields","initialIndexOfResearchFieldOfCurrentlyDisplayedArticles","currentHash","hash","slice","parsedCurrentHash","Number","isInteger","upperBound","max","indexOfResearchFieldOfCurrentlyDisplayedArticles","newSideNavigationBarOpenState","finalIndexOfResearchFieldOfCurrentlyDisplayedArticles","_this$state2","toString","LoadingScreen_LoadingScreen","HeaderRow_HeaderRow","SideNavigationBar_SideNavigationBar","CenterFrame_CenterFrame","ReactDOM","render","App_App","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.32c14dd7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React, {Component} from 'react';\n\nconst loadingBarAnimationDurationInSeconds = 4;\nconst numberOfLoadingBars = 10;\n\nexport class LoadingScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingScreenWorthShowing: true,\n            shutOffDelayer: null,\n        };\n    }\n\n    componentWillUnmount() {\n        let { shutOffDelayer } = this.state;\n        clearInterval(shutOffDelayer);\n    }\n\n    render() {\n        let { dataIsLoaded } = this.props;\n        let { loadingScreenWorthShowing, shutOffDelayer } = this.state;\n        let renderedComponent = null; \n        if ( loadingScreenWorthShowing ) {\n            let loadingScreenClass = dataIsLoaded ? 'loading-screen loading-finished' : 'loading-screen' ;\n            if ( dataIsLoaded && ! shutOffDelayer ) {\n                let shutOffFunction = () => { this.setState({ loadingScreenWorthShowing: false }); };\n                let shutOffDelayTime = 6000;\n                this.setState({\n                    shutOffDelayer: setTimeout( shutOffFunction, shutOffDelayTime),\n                });\n            }\n            let loadingBars = [];\n            for(var loadingBarIndex = 0; loadingBarIndex<numberOfLoadingBars; loadingBarIndex++) {\n                let loadingBarWaitTime = loadingBarIndex * loadingBarAnimationDurationInSeconds / numberOfLoadingBars;\n                let style = {width: `100%`,\n                             height: `100%`,\n                             paddingTop: '100%',\n                             animation : `loading-screen-animation ${parseInt(loadingBarAnimationDurationInSeconds)}s ease-in-out`,\n                             animationDelay: `${loadingBarWaitTime}s`,\n                             color: 'white',\n\t\t             fontSize: '4rem',\n                             fontFamily: 'Libre Baskerville',\n\t                     textAlign: 'center',\n                            };\n                loadingBars.push(<div style={style} key={`Loading Bar ${loadingBarIndex}`}></div>);\n            };\n            renderedComponent = <div className={loadingScreenClass}>{loadingBars}</div>;\n        }\n        return renderedComponent;\n    }\n}\n","\nimport React, {Component} from 'react';\n\nconst numMillisecondsBetweenHeaderRowUpdates = 8000;\nconst headerRowFontSizeEstimateInPixels = 10;\n\nexport class HeaderRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstShownResearchFieldIndex: 0,\n            numberOfResearchFieldsShownMostRecently: 0,\n            currentlyShownResearchFields: [],\n            headerRowResearchFieldLoopingInterval: null,\n        };\n    }\n    \n    updateCurrentlyShownResearchFields() {\n        let { firstShownResearchFieldIndex, numberOfResearchFieldsShownMostRecently } = this.state;\n        let { researchFields } = this.props;\n        let updatedFirstShownResearchFieldIndex = ( firstShownResearchFieldIndex+numberOfResearchFieldsShownMostRecently ) % researchFields.length;\n        let estimatedNumberOfHeaderRowCharactersAvailable = window.innerWidth / headerRowFontSizeEstimateInPixels - 30;\n        let nextResearchFieldsToShow = [];\n        let currentlyShownResearchFieldIndex = updatedFirstShownResearchFieldIndex;\n        let nextResearchField = researchFields[currentlyShownResearchFieldIndex];\n        do {\n            currentlyShownResearchFieldIndex += 1;\n            nextResearchFieldsToShow.push(nextResearchField);\n            estimatedNumberOfHeaderRowCharactersAvailable -= nextResearchField.length;\n            currentlyShownResearchFieldIndex = currentlyShownResearchFieldIndex % researchFields.length;\n            nextResearchField = researchFields[currentlyShownResearchFieldIndex];\n        } while (estimatedNumberOfHeaderRowCharactersAvailable > nextResearchField.length );\n        this.setState({\n            firstShownResearchFieldIndex: updatedFirstShownResearchFieldIndex,\n            currentlyShownResearchFields: nextResearchFieldsToShow,\n            numberOfResearchFieldsShownMostRecently: nextResearchFieldsToShow.length,\n        });\n    }\n    \n    initializeHeaderRowResearchFieldLoopingInterval() {\n        this.updateCurrentlyShownResearchFields();\n        this.headerRowResearchFieldLoopingInterval = setInterval(() => {this.updateCurrentlyShownResearchFields();}, numMillisecondsBetweenHeaderRowUpdates);\n    }\n    \n    componentDidMount() {\n        this.initializeHeaderRowResearchFieldLoopingInterval();\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.headerRowResearchFieldLoopingInterval);\n    }\n    \n    render() {\n        let { firstShownResearchFieldIndex } = this.state;\n        let { goToResearchFieldAtIndexMethod } = this.props;\n        return <div id='header-row'>\n                 <ul className='news-link-ul'>\n                   {this.state.currentlyShownResearchFields.map(\n                       function(researchField, index) {\n                           let indexForCurrentResearchField = index+firstShownResearchFieldIndex;\n                           let goToCurrentResearchFieldFunction = function() {\n                               return goToResearchFieldAtIndexMethod(indexForCurrentResearchField);\n                           };\n                           return <li onClick={goToCurrentResearchFieldFunction} key={researchField}><a href={'#'.concat(parseInt(indexForCurrentResearchField))}>{researchField}</a></li>;\n                       })}\n                 </ul>\n               </div>;\n    }\n}\n\n","\nimport React, {Component} from 'react';\nimport {titleText} from './MiscComponentUtilities';\n\nexport class TitleRow extends Component {\n    render() {\n        let { sideNavigationBarOpenStateChangingMethod, goToPreviousResearchFieldMethod, goToNextResearchFieldMethod, researchFieldOfCurrentlyDisplayedArticles,\n              sideNavigationBarIsOpen } = this.props;\n        let toggleSideBarText = sideNavigationBarIsOpen ? \"Navigate Fewer Research Fields\" : \"Navigate More Research Fields\";\n        return <div id='title-row'>\n                  <div id='side-bar-toggle' onClick={sideNavigationBarOpenStateChangingMethod}>{toggleSideBarText}</div>\n                  <div id='arxiv-title'>{titleText}</div>\n                  <div id='current-research-field-display-row'>\n                    <span className='move-research-field-left' onClick={goToPreviousResearchFieldMethod}>Previous Research Field</span>\n                    <span className='currently-shown-research-field' onClick={sideNavigationBarOpenStateChangingMethod}>{researchFieldOfCurrentlyDisplayedArticles}</span>\n                    <span className='move-research-field-right' onClick={goToNextResearchFieldMethod}>Next Research Field</span>\n                  </div>\n                  <hr id='title-divider'/>\n               </div>;\n    }\n}\n","\n// Public Interface\n\nexport const titleText = 'The ArXiv Archive';\n\nexport const arxivEndPoint = 'https://webhooks.mongodb-stitch.com/api/client/v2.0/app/arxivnewspaperfetcher-mkmia/service/arXivNewsPaperListener/incoming_webhook/webhook0';\n\nexport function uniquifyList (nonUniqueList) {\n    var uniqifiedList = nonUniqueList.filter(function(element, index){\n\treturn nonUniqueList.indexOf(element) >= index;\n    });\n    return uniqifiedList;\n}\n","\nimport React, {Component} from 'react';\n\nfunction renderResearchPaperJSONObjectForDisplay(researchPaperJSONObject, index) {\n    let {page_link, research_paper_title, primary_subject, secondary_subjects, author_info, abstract} = researchPaperJSONObject;\n    let renderedAuthorInfo = author_info.map(\n        function(authorInfoJSONOBject, authorIndex) {\n            let {author, author_link} = authorInfoJSONOBject;\n            return (\n                <span className='article-author' key={author.concat(parseInt(authorIndex))}>\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={author_link}>{author}</a>{' '}\n                </span>\n            );\n        });\n    return (\n        <div className='article' key={index}>\n          { research_paper_title && <span className='article-title'><a rel=\"noopener noreferrer\" target=\"_blank\" href={page_link} className='title'>{research_paper_title}</a></span> }\n          <br/>\n          <span className='article-author'>By: </span>{ renderedAuthorInfo }\n          <div className='article-subjects'>\n            Subjects: <span>{ primary_subject }</span>\n            { (secondary_subjects.length > 0) && (', ') }\n            { secondary_subjects.join(', ') }\n          </div>\n          <div className='article-abstract'>\n            { abstract }\n          </div>\n        </div>\n    );\n}\n\nexport class ArticleColumnContainer extends Component {\n    render() {\n        let { researchFieldToResearchPaperJSONObjectsMapping, researchFieldOfCurrentlyDisplayedArticles } = this.props;\n        let JSONObjectsForCurrentlyDisplayedArticles = researchFieldToResearchPaperJSONObjectsMapping[researchFieldOfCurrentlyDisplayedArticles];\n        let firstColumnArticleJSONObjects = [];\n        let secondColumnArticleJSONObjects = [];\n        let thirdColumnArticleJSONObjects = [];\n        let firstColumnHeightEstimation = 0;\n        let secondColumnHeightEstimation = 0;\n        let thirdColumnHeightEstimation = 0;\n        JSONObjectsForCurrentlyDisplayedArticles.forEach(function(JSONObject) {\n            let smallestCount = Math.min(firstColumnHeightEstimation, secondColumnHeightEstimation, thirdColumnHeightEstimation);\n            let { abstract, research_paper_title } = JSONObject;\n            let articleHeightEstimation = abstract.length + research_paper_title.length * 8 + 20;\n            switch (smallestCount) {\n            case firstColumnHeightEstimation:\n                firstColumnArticleJSONObjects.push(JSONObject);\n                firstColumnHeightEstimation += articleHeightEstimation;\n                break;\n            case secondColumnHeightEstimation:\n                secondColumnArticleJSONObjects.push(JSONObject);\n                secondColumnHeightEstimation += articleHeightEstimation;\n                break;\n            case thirdColumnHeightEstimation:\n                thirdColumnArticleJSONObjects.push(JSONObject);\n                thirdColumnHeightEstimation += articleHeightEstimation;\n                break;\n            default: console.warn(\"Could not render main article columns correctly.\"); break;\n            }\n        });\n        let firstColumnRendered = firstColumnArticleJSONObjects.map(renderResearchPaperJSONObjectForDisplay);\n        let secondColumnRendered = secondColumnArticleJSONObjects.map(renderResearchPaperJSONObjectForDisplay);\n        let thirdColumnRendered = thirdColumnArticleJSONObjects.map(renderResearchPaperJSONObjectForDisplay);\n        return <div id='article-column-container'>\n                 <div key={1} className='article-column'>{firstColumnRendered}</div>\n                 <div key={2} className='article-column'>{secondColumnRendered}</div>\n                 <div key={3} className='article-column'>{thirdColumnRendered}</div>\n               </div>;\n    }\n}\n","\nimport React, {Component} from 'react';\nimport {TitleRow} from './TitleRow';\nimport {ArticleColumnContainer} from './ArticleColumnContainer';\n\nfunction indexResearchPaperJSONObjectsByResearchField(researchPaperJSONObjects) {\n    let researchFieldToResearchPaperJSONObjectsMapping = {};\n    researchPaperJSONObjects.forEach(researchPaperJSONObject => {\n        let { research_field } = researchPaperJSONObject;\n        let researchPaperJSONObjects = researchFieldToResearchPaperJSONObjectsMapping[research_field];\n        if (!researchPaperJSONObjects) {\n            researchPaperJSONObjects = [researchPaperJSONObject];\n        } else {\n            researchPaperJSONObjects.push(researchPaperJSONObject);\n        }\n        researchFieldToResearchPaperJSONObjectsMapping[research_field] = researchPaperJSONObjects;\n    });\n    return researchFieldToResearchPaperJSONObjectsMapping;\n}\n\nexport class CenterFrame extends Component {\n    constructor(props) {\n        super(props);\n        let {researchPaperJSONObjects} = this.props;\n        this.state = {\n            researchFieldToResearchPaperJSONObjectsMapping: indexResearchPaperJSONObjectsByResearchField(researchPaperJSONObjects),\n        };\n    }\n    \n    render() {\n        let { researchFieldToResearchPaperJSONObjectsMapping } = this.state;\n        let { researchFieldOfCurrentlyDisplayedArticles, goToNextResearchFieldMethod, goToPreviousResearchFieldMethod, sideNavigationBarOpenStateChangingMethod,\n              sideNavigationBarIsOpen } = this.props;\n        let closeSideNavigationBar = function() {\n            if ( sideNavigationBarIsOpen ) {\n                sideNavigationBarOpenStateChangingMethod();\n            }\n        };\n        return <div id='center-frame' onClick={closeSideNavigationBar}>\n                 <TitleRow\n                     sideNavigationBarOpenStateChangingMethod={sideNavigationBarOpenStateChangingMethod}\n                     goToPreviousResearchFieldMethod={goToPreviousResearchFieldMethod}\n                     goToNextResearchFieldMethod={goToNextResearchFieldMethod}\n                     researchFieldOfCurrentlyDisplayedArticles={researchFieldOfCurrentlyDisplayedArticles}\n                     sideNavigationBarIsOpen={sideNavigationBarIsOpen}/>\n                 <ArticleColumnContainer\n                     researchFieldToResearchPaperJSONObjectsMapping={researchFieldToResearchPaperJSONObjectsMapping}\n                     researchFieldOfCurrentlyDisplayedArticles={researchFieldOfCurrentlyDisplayedArticles}/>\n               </div>;\n    }\n}\n\n","\nimport React, {Component} from 'react';\n\nexport class SideNavigationBar extends Component {\n    render() {\n        let { goToResearchFieldAtIndexMethod, researchFields, sideNavigationBarOpenStateChangingMethod, sideNavigationBarIsOpen } = this.props;\n        let classForRendering = sideNavigationBarIsOpen ? 'side-navigation-bar open' : 'side-navigation-bar closed';\n        return <div className={classForRendering}>\n                 <ul className='side-navigation-bar-ul'>\n                   {researchFields.map(\n                       function(researchField, indexForCurrentResearchField) {\n                           let performSideNavigationBarOnClickActions = function() {\n                               sideNavigationBarOpenStateChangingMethod();\n                               goToResearchFieldAtIndexMethod(indexForCurrentResearchField);\n                           };\n                           return <li onClick={performSideNavigationBarOnClickActions} key={researchField}><a href={'#'.concat(parseInt(indexForCurrentResearchField))}>{researchField}</a></li>;\n                       })}\n                 </ul>\n               </div>;\n    }\n}\n","\nimport React, {Component} from 'react';\nimport {LoadingScreen} from './LoadingScreen';\nimport {HeaderRow}  from './HeaderRow';\nimport {CenterFrame} from './CenterFrame';\nimport {SideNavigationBar} from './SideNavigationBar';\nimport {titleText, arxivEndPoint, uniquifyList} from './MiscComponentUtilities';\n\nfunction parseArxivWebserviceForUniqueResearchFields(json) {\n    var researchFieldsNonUnique = json.map(researchPaperJSONObject => researchPaperJSONObject.research_field);\n    var researchFields = uniquifyList(researchFieldsNonUnique);\n    researchFields.sort();\n    return researchFields;\n};\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n        this.goToNextResearchFieldMethod = this.goToNextResearchFieldMethod.bind(this);\n        this.goToPreviousResearchFieldMethod = this.goToPreviousResearchFieldMethod.bind(this);\n        this.goToResearchFieldAtIndex = this.goToResearchFieldAtIndex.bind(this);\n        this.changeSideNavigationBarOpenState = this.changeSideNavigationBarOpenState.bind(this);\n        this.state = {\n            researchFields: [],\n            allResearchPaperJSONObjects: [],\n            dataIsLoaded: false,\n        };\n    }\n    \n    componentDidMount() {\n        let title = document.getElementsByTagName('title')[0];\n        title.innerText = titleText;\n        fetch(arxivEndPoint)\n            .then(res => res.json())\n            .then(json => {\n                let researchFieldsViaJSON = parseArxivWebserviceForUniqueResearchFields(json);\n                let initialIndexOfResearchFieldOfCurrentlyDisplayedArticles = 0;\n                let currentHash = window.location.hash.slice(1);\n                let parsedCurrentHash = parseInt(currentHash);\n                let currentHashIsInteger = Number.isInteger(parsedCurrentHash);\n                if (currentHashIsInteger) {\n                    let lowerBound = 0;\n                    let upperBound = researchFieldsViaJSON.length-1;\n                    initialIndexOfResearchFieldOfCurrentlyDisplayedArticles = Math.max(lowerBound, Math.min(parsedCurrentHash, upperBound));\n                }\n                this.setState({\n                    researchFields: researchFieldsViaJSON,\n                    indexOfResearchFieldOfCurrentlyDisplayedArticles: initialIndexOfResearchFieldOfCurrentlyDisplayedArticles,\n                    allResearchPaperJSONObjects: json,\n                    dataIsLoaded: true,\n                    sideNavigationBarIsOpen: false,\n                });\n            });\n    }\n\n    changeSideNavigationBarOpenState(){\n        let { sideNavigationBarIsOpen } = this.state;\n        let newSideNavigationBarOpenState = sideNavigationBarIsOpen ? false : true;\n        this.setState({\n            sideNavigationBarIsOpen: newSideNavigationBarOpenState,\n        });\n    }\n    \n    goToResearchFieldAtIndex(index) {\n        let { researchFields } = this.state;\n        let lowerBound = 0;\n        let upperBound = researchFields.length-1;\n        this.setState({\n            indexOfResearchFieldOfCurrentlyDisplayedArticles: Math.max(lowerBound, Math.min(index, upperBound)),\n        });\n    }\n    \n    goToNextResearchFieldMethod() {\n        let { researchFields, indexOfResearchFieldOfCurrentlyDisplayedArticles } = this.state;\n        let upperBound = researchFields.length-1;\n        let finalIndexOfResearchFieldOfCurrentlyDisplayedArticles = Math.min(indexOfResearchFieldOfCurrentlyDisplayedArticles+1, upperBound);\n        this.setState({\n            indexOfResearchFieldOfCurrentlyDisplayedArticles: finalIndexOfResearchFieldOfCurrentlyDisplayedArticles,\n        });\n    };\n    \n    goToPreviousResearchFieldMethod() {\n        let { indexOfResearchFieldOfCurrentlyDisplayedArticles } = this.state;\n        let lowerBound = 0;\n        let finalIndexOfResearchFieldOfCurrentlyDisplayedArticles = Math.max(indexOfResearchFieldOfCurrentlyDisplayedArticles-1, lowerBound);\n        this.setState({\n            indexOfResearchFieldOfCurrentlyDisplayedArticles: finalIndexOfResearchFieldOfCurrentlyDisplayedArticles,\n        });\n    };\n    \n    render() {\n        let { researchFields, indexOfResearchFieldOfCurrentlyDisplayedArticles, allResearchPaperJSONObjects, dataIsLoaded, sideNavigationBarIsOpen } = this.state;\n        let researchFieldOfCurrentlyDisplayedArticles = researchFields[indexOfResearchFieldOfCurrentlyDisplayedArticles];\n        if ( dataIsLoaded ) {\n            window.location.hash = '#'.concat(indexOfResearchFieldOfCurrentlyDisplayedArticles.toString());\n        }\n        return (\n            <div id=\"app\">\n              <LoadingScreen dataIsLoaded={dataIsLoaded}/>\n              { dataIsLoaded &&\n                <div id='loaded-content'>\n                  <HeaderRow\n                      goToResearchFieldAtIndexMethod={this.goToResearchFieldAtIndex}\n                      researchFields={researchFields}/>\n                  <SideNavigationBar\n                      goToResearchFieldAtIndexMethod={this.goToResearchFieldAtIndex}\n                      researchFields={researchFields}\n                      sideNavigationBarOpenStateChangingMethod={this.changeSideNavigationBarOpenState}\n                      sideNavigationBarIsOpen={sideNavigationBarIsOpen}/>\n                  <CenterFrame\n                      researchFieldOfCurrentlyDisplayedArticles={researchFieldOfCurrentlyDisplayedArticles}\n                      researchPaperJSONObjects={allResearchPaperJSONObjects}\n                      goToNextResearchFieldMethod={this.goToNextResearchFieldMethod}\n                      goToPreviousResearchFieldMethod={this.goToPreviousResearchFieldMethod}\n                      sideNavigationBarOpenStateChangingMethod={this.changeSideNavigationBarOpenState}\n                      sideNavigationBarIsOpen={sideNavigationBarIsOpen}\n                  />\n                </div>}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport {App} from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}