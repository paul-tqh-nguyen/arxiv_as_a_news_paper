{"version":3,"sources":["serviceWorker.js","Components/LoadingScreen.js","Components/HeaderRow.js","Components/TitleRow.js","Components/MiscComponentUtilities.js","Components/ArticleColumnContainer.js","Components/CenterFrame.js","Components/SideNavigationBar.js","Components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","LoadingScreen","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","loadingScreenClass","props","dataIsLoaded","loadingBars","loadingBarIndex","loadingBarWaitTime","style","width","height","paddingTop","animation","concat","parseInt","animationDelay","color","fontSize","fontFamily","textAlign","push","react_default","a","createElement","className","Component","HeaderRow","_this","call","firstShownResearchFieldIndex","numberOfResearchFieldsShownMostRecently","currentlyShownResearchFields","headerRowResearchFieldLoopingInterval","_this$state","researchFields","updatedFirstShownResearchFieldIndex","length","estimatedNumberOfHeaderRowCharactersAvailable","innerWidth","nextResearchFieldsToShow","currentlyShownResearchFieldIndex","nextResearchField","setState","_this2","updateCurrentlyShownResearchFields","setInterval","initializeHeaderRowResearchFieldLoopingInterval","clearInterval","goToResearchFieldAtIndexMethod","id","map","researchField","index","indexForCurrentResearchField","onClick","href","TitleRow","_this$props","sideNavigationBarOpenStateChangingMethod","goToPreviousResearchFieldMethod","goToNextResearchFieldMethod","researchFieldOfCurrentlyDisplayedArticles","toggleSideBarText","sideNavigationBarIsOpen","renderResearchPaperJSONObjectForDisplay","researchPaperJSONObject","page_link","research_paper_title","primary_subject","secondary_subjects","author_info","abstract","renderedAuthorInfo","authorInfoJSONOBject","authorIndex","author","author_link","target","rel","join","ArticleColumnContainer","JSONObjectsForCurrentlyDisplayedArticles","researchFieldToResearchPaperJSONObjectsMapping","firstColumnArticleJSONObjects","secondColumnArticleJSONObjects","thirdColumnArticleJSONObjects","firstColumnHeightEstimation","secondColumnHeightEstimation","thirdColumnHeightEstimation","forEach","JSONObject","smallestCount","Math","min","articleHeightEstimation","warn","firstColumnRendered","secondColumnRendered","thirdColumnRendered","indexResearchPaperJSONObjectsByResearchField","researchPaperJSONObjects","research_field","CenterFrame","TitleRow_TitleRow","ArticleColumnContainer_ArticleColumnContainer","SideNavigationBar","classForRendering","App","bind","assertThisInitialized","goToResearchFieldAtIndex","changeSideNavigationBarOpenState","allResearchPaperJSONObjects","document","getElementsByTagName","innerText","fetch","res","json","researchFieldsViaJSON","nonUniqueList","researchFieldsNonUnique","filter","element","indexOf","sort","parseArxivWebserviceForUniqueResearchFields","initialIndexOfResearchFieldOfCurrentlyDisplayedArticles","currentHash","hash","slice","parsedCurrentHash","Number","isInteger","upperBound","max","indexOfResearchFieldOfCurrentlyDisplayedArticles","newSideNavigationBarOpenState","finalIndexOfResearchFieldOfCurrentlyDisplayedArticles","_this$state2","toString","LoadingScreen_LoadingScreen","HeaderRow_HeaderRow","SideNavigationBar_SideNavigationBar","CenterFrame_CenterFrame","ReactDOM","render","App_App","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.19e0c645.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React, {Component} from 'react';\n\nconst loadingBarAnimationDurationInSeconds = 4;\nconst numberOfLoadingBars = 10;\n\nexport class LoadingScreen extends Component {\n    render() {\n        let { dataIsLoaded } = this.props;\n        let loadingScreenClass = dataIsLoaded ? 'loading-screen loading-finished' : 'loading-screen' ;\n        let loadingBars = [];\n        for(var loadingBarIndex = 0; loadingBarIndex<numberOfLoadingBars; loadingBarIndex++) {\n            let loadingBarWaitTime = loadingBarIndex * loadingBarAnimationDurationInSeconds / numberOfLoadingBars;\n            let style = {width: `100%`,\n                         height: `100%`,\n                         paddingTop: '100%',\n                         animation : `loading-screen-animation ${parseInt(loadingBarAnimationDurationInSeconds)}s ease-in-out`,\n                         animationDelay: `${loadingBarWaitTime}s`,\n                         color: 'white',\n\t\t         fontSize: '4rem',\n                         fontFamily: 'Libre Baskerville',\n\t                 textAlign: 'center',\n                        };\n            loadingBars.push(<div style={style} key={`Loading Bar ${loadingBarIndex}`}></div>);\n        }\n        return (\n            <div className={loadingScreenClass}>{loadingBars}</div>\n        );\n    }\n}\n","\nimport React, {Component} from 'react';\n\nconst numMillisecondsBetweenHeaderRowUpdates = 8000;\nconst headerRowFontSizeEstimateInPixels = 10;\n\nexport class HeaderRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstShownResearchFieldIndex: 0,\n            numberOfResearchFieldsShownMostRecently: 0,\n            currentlyShownResearchFields: [],\n            headerRowResearchFieldLoopingInterval: null,\n        };\n    }\n    \n    updateCurrentlyShownResearchFields() {\n        let { firstShownResearchFieldIndex, numberOfResearchFieldsShownMostRecently } = this.state;\n        let { researchFields } = this.props;\n        let updatedFirstShownResearchFieldIndex = ( firstShownResearchFieldIndex+numberOfResearchFieldsShownMostRecently ) % researchFields.length;\n        let estimatedNumberOfHeaderRowCharactersAvailable = window.innerWidth / headerRowFontSizeEstimateInPixels - 30;\n        let nextResearchFieldsToShow = [];\n        let currentlyShownResearchFieldIndex = updatedFirstShownResearchFieldIndex;\n        let nextResearchField = researchFields[currentlyShownResearchFieldIndex];\n        do {\n            currentlyShownResearchFieldIndex += 1;\n            nextResearchFieldsToShow.push(nextResearchField);\n            estimatedNumberOfHeaderRowCharactersAvailable -= nextResearchField.length;\n            currentlyShownResearchFieldIndex = currentlyShownResearchFieldIndex % researchFields.length;\n            nextResearchField = researchFields[currentlyShownResearchFieldIndex];\n        } while (estimatedNumberOfHeaderRowCharactersAvailable > nextResearchField.length );\n        this.setState({\n            firstShownResearchFieldIndex: updatedFirstShownResearchFieldIndex,\n            currentlyShownResearchFields: nextResearchFieldsToShow,\n            numberOfResearchFieldsShownMostRecently: nextResearchFieldsToShow.length,\n        });\n    }\n    \n    initializeHeaderRowResearchFieldLoopingInterval() {\n        this.updateCurrentlyShownResearchFields();\n        this.headerRowResearchFieldLoopingInterval = setInterval(() => {this.updateCurrentlyShownResearchFields();}, numMillisecondsBetweenHeaderRowUpdates);\n    }\n    \n    componentDidMount() {\n        this.initializeHeaderRowResearchFieldLoopingInterval();\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.headerRowResearchFieldLoopingInterval);\n    }\n    \n    render() {\n        let { firstShownResearchFieldIndex } = this.state;\n        let { goToResearchFieldAtIndexMethod } = this.props;\n        return <div id='header-row'>\n                 <ul className='news-link-ul'>\n                   {this.state.currentlyShownResearchFields.map(\n                       function(researchField, index) {\n                           let indexForCurrentResearchField = index+firstShownResearchFieldIndex;\n                           let goToCurrentResearchFieldFunction = function() {\n                               return goToResearchFieldAtIndexMethod(indexForCurrentResearchField);\n                           };\n                           return <li onClick={goToCurrentResearchFieldFunction} key={researchField}><a href={'#'.concat(parseInt(indexForCurrentResearchField))}>{researchField}</a></li>;\n                       })}\n                 </ul>\n               </div>;\n    }\n}\n\n","\nimport React, {Component} from 'react';\nimport {titleText} from './MiscComponentUtilities';\n\nexport class TitleRow extends Component {\n    render() {\n        let { sideNavigationBarOpenStateChangingMethod, goToPreviousResearchFieldMethod, goToNextResearchFieldMethod, researchFieldOfCurrentlyDisplayedArticles,\n              sideNavigationBarIsOpen } = this.props;\n        let toggleSideBarText = sideNavigationBarIsOpen ? \"Navigate Fewer Research Fields\" : \"Navigate More Research Fields\";\n        return <div id='title-row'>\n                  <div id='side-bar-toggle' onClick={sideNavigationBarOpenStateChangingMethod}>{toggleSideBarText}</div>\n                  <div id='arxiv-title'>{titleText}</div>\n                  <div id='current-research-field-display-row'>\n                    <span className='move-research-field-left' onClick={goToPreviousResearchFieldMethod}>Previous Research Field</span>\n                    <span className='currently-shown-research-field' onClick={sideNavigationBarOpenStateChangingMethod}>{researchFieldOfCurrentlyDisplayedArticles}</span>\n                    <span className='move-research-field-right' onClick={goToNextResearchFieldMethod}>Next Research Field</span>\n                  </div>\n                  <hr id='title-divider'/>\n               </div>;\n    }\n}\n","\n// Public Interface\n\nexport const titleText = 'The ArXiv Archive';\n\nexport const arxivEndPoint = 'https://webhooks.mongodb-stitch.com/api/client/v2.0/app/arxivnewspaperfetcher-mkmia/service/arXivNewsPaperListener/incoming_webhook/webhook0';\n\nexport function uniquifyList (nonUniqueList) {\n    var uniqifiedList = nonUniqueList.filter(function(element, index){\n\treturn nonUniqueList.indexOf(element) >= index;\n    });\n    return uniqifiedList;\n}\n","\nimport React, {Component} from 'react';\n\nfunction renderResearchPaperJSONObjectForDisplay(researchPaperJSONObject, index) {\n    let {page_link, research_paper_title, primary_subject, secondary_subjects, author_info, abstract} = researchPaperJSONObject;\n    let renderedAuthorInfo = author_info.map(\n        function(authorInfoJSONOBject, authorIndex) {\n            let {author, author_link} = authorInfoJSONOBject;\n            return (\n                <span className='article-author' key={author.concat(parseInt(authorIndex))}>\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={author_link}>{author}</a>{' '}\n                </span>\n            );\n        });\n    return (\n        <div className='article' key={index}>\n          { research_paper_title && <span className='article-title'><a rel=\"noopener noreferrer\" target=\"_blank\" href={page_link} className='title'>{research_paper_title}</a></span> }\n          <br/>\n          <span className='article-author'>By: </span>{ renderedAuthorInfo }\n          <div className='article-subjects'>\n            Subjects: <span>{ primary_subject }</span>\n            { (secondary_subjects.length > 0) && (', ') }\n            { secondary_subjects.join(', ') }\n          </div>\n          <div className='article-abstract'>\n            { abstract }\n          </div>\n        </div>\n    );\n}\n\nexport class ArticleColumnContainer extends Component {\n    render() {\n        let { researchFieldToResearchPaperJSONObjectsMapping, researchFieldOfCurrentlyDisplayedArticles } = this.props;\n        let JSONObjectsForCurrentlyDisplayedArticles = researchFieldToResearchPaperJSONObjectsMapping[researchFieldOfCurrentlyDisplayedArticles];\n        let firstColumnArticleJSONObjects = [];\n        let secondColumnArticleJSONObjects = [];\n        let thirdColumnArticleJSONObjects = [];\n        let firstColumnHeightEstimation = 0;\n        let secondColumnHeightEstimation = 0;\n        let thirdColumnHeightEstimation = 0;\n        JSONObjectsForCurrentlyDisplayedArticles.forEach(function(JSONObject) {\n            let smallestCount = Math.min(firstColumnHeightEstimation, secondColumnHeightEstimation, thirdColumnHeightEstimation);\n            let { abstract, research_paper_title } = JSONObject;\n            let articleHeightEstimation = abstract.length + research_paper_title.length * 8 + 20;\n            switch (smallestCount) {\n            case firstColumnHeightEstimation:\n                firstColumnArticleJSONObjects.push(JSONObject);\n                firstColumnHeightEstimation += articleHeightEstimation;\n                break;\n            case secondColumnHeightEstimation:\n                secondColumnArticleJSONObjects.push(JSONObject);\n                secondColumnHeightEstimation += articleHeightEstimation;\n                break;\n            case thirdColumnHeightEstimation:\n                thirdColumnArticleJSONObjects.push(JSONObject);\n                thirdColumnHeightEstimation += articleHeightEstimation;\n                break;\n            default: console.warn(\"Could not render main article columns correctly.\"); break;\n            }\n        });\n        let firstColumnRendered = firstColumnArticleJSONObjects.map(renderResearchPaperJSONObjectForDisplay);\n        let secondColumnRendered = secondColumnArticleJSONObjects.map(renderResearchPaperJSONObjectForDisplay);\n        let thirdColumnRendered = thirdColumnArticleJSONObjects.map(renderResearchPaperJSONObjectForDisplay);\n        return <div id='article-column-container'>\n                 <div key={1} className='article-column'>{firstColumnRendered}</div>\n                 <div key={2} className='article-column'>{secondColumnRendered}</div>\n                 <div key={3} className='article-column'>{thirdColumnRendered}</div>\n               </div>;\n    }\n}\n","\nimport React, {Component} from 'react';\nimport {TitleRow} from './TitleRow';\nimport {ArticleColumnContainer} from './ArticleColumnContainer';\n\nfunction indexResearchPaperJSONObjectsByResearchField(researchPaperJSONObjects) {\n    let researchFieldToResearchPaperJSONObjectsMapping = {};\n    researchPaperJSONObjects.forEach(researchPaperJSONObject => {\n        let { research_field } = researchPaperJSONObject;\n        let researchPaperJSONObjects = researchFieldToResearchPaperJSONObjectsMapping[research_field];\n        if (!researchPaperJSONObjects) {\n            researchPaperJSONObjects = [researchPaperJSONObject];\n        } else {\n            researchPaperJSONObjects.push(researchPaperJSONObject);\n        }\n        researchFieldToResearchPaperJSONObjectsMapping[research_field] = researchPaperJSONObjects;\n    });\n    return researchFieldToResearchPaperJSONObjectsMapping;\n}\n\nexport class CenterFrame extends Component {\n    constructor(props) {\n        super(props);\n        let {researchPaperJSONObjects} = this.props;\n        this.state = {\n            researchFieldToResearchPaperJSONObjectsMapping: indexResearchPaperJSONObjectsByResearchField(researchPaperJSONObjects),\n        };\n    }\n    \n    render() {\n        let { researchFieldToResearchPaperJSONObjectsMapping } = this.state;\n        let { researchFieldOfCurrentlyDisplayedArticles, goToNextResearchFieldMethod, goToPreviousResearchFieldMethod, sideNavigationBarOpenStateChangingMethod,\n              sideNavigationBarIsOpen } = this.props;\n        let closeSideNavigationBar = function() {\n            if ( sideNavigationBarIsOpen ) {\n                sideNavigationBarOpenStateChangingMethod();\n            }\n        };\n        return <div id='center-frame' onClick={closeSideNavigationBar}>\n                 <TitleRow\n                     sideNavigationBarOpenStateChangingMethod={sideNavigationBarOpenStateChangingMethod}\n                     goToPreviousResearchFieldMethod={goToPreviousResearchFieldMethod}\n                     goToNextResearchFieldMethod={goToNextResearchFieldMethod}\n                     researchFieldOfCurrentlyDisplayedArticles={researchFieldOfCurrentlyDisplayedArticles}\n                     sideNavigationBarIsOpen={sideNavigationBarIsOpen}/>\n                 <ArticleColumnContainer\n                     researchFieldToResearchPaperJSONObjectsMapping={researchFieldToResearchPaperJSONObjectsMapping}\n                     researchFieldOfCurrentlyDisplayedArticles={researchFieldOfCurrentlyDisplayedArticles}/>\n               </div>;\n    }\n}\n\n","\nimport React, {Component} from 'react';\n\nexport class SideNavigationBar extends Component {\n    render() {\n        let { goToResearchFieldAtIndexMethod, researchFields, sideNavigationBarOpenStateChangingMethod, sideNavigationBarIsOpen } = this.props;\n        let classForRendering = sideNavigationBarIsOpen ? 'side-navigation-bar open' : 'side-navigation-bar closed';\n        return <div className={classForRendering}>\n                 <ul className='side-navigation-bar-ul'>\n                   {researchFields.map(\n                       function(researchField, indexForCurrentResearchField) {\n                           let performSideNavigationBarOnClickActions = function() {\n                               sideNavigationBarOpenStateChangingMethod();\n                               goToResearchFieldAtIndexMethod(indexForCurrentResearchField);\n                           };\n                           return <li onClick={performSideNavigationBarOnClickActions} key={researchField}><a href={'#'.concat(parseInt(indexForCurrentResearchField))}>{researchField}</a></li>;\n                       })}\n                 </ul>\n               </div>;\n    }\n}\n","\nimport React, {Component} from 'react';\nimport {LoadingScreen} from './LoadingScreen';\nimport {HeaderRow}  from './HeaderRow';\nimport {CenterFrame} from './CenterFrame';\nimport {SideNavigationBar} from './SideNavigationBar';\nimport {titleText, arxivEndPoint, uniquifyList} from './MiscComponentUtilities';\n\nfunction parseArxivWebserviceForUniqueResearchFields(json) {\n    var researchFieldsNonUnique = json.map(researchPaperJSONObject => researchPaperJSONObject.research_field);\n    var researchFields = uniquifyList(researchFieldsNonUnique);\n    researchFields.sort();\n    return researchFields;\n};\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n        this.goToNextResearchFieldMethod = this.goToNextResearchFieldMethod.bind(this);\n        this.goToPreviousResearchFieldMethod = this.goToPreviousResearchFieldMethod.bind(this);\n        this.goToResearchFieldAtIndex = this.goToResearchFieldAtIndex.bind(this);\n        this.changeSideNavigationBarOpenState = this.changeSideNavigationBarOpenState.bind(this);\n        this.state = {\n            researchFields: [],\n            allResearchPaperJSONObjects: [],\n            dataIsLoaded: false,\n        };\n    }\n    \n    componentDidMount() {\n        let title = document.getElementsByTagName('title')[0];\n        title.innerText = titleText;\n        fetch(arxivEndPoint)\n            .then(res => res.json())\n            .then(json => {\n                let researchFieldsViaJSON = parseArxivWebserviceForUniqueResearchFields(json);\n                let initialIndexOfResearchFieldOfCurrentlyDisplayedArticles = 0;\n                let currentHash = window.location.hash.slice(1);\n                let parsedCurrentHash = parseInt(currentHash);\n                let currentHashIsInteger = Number.isInteger(parsedCurrentHash);\n                if (currentHashIsInteger) {\n                    let lowerBound = 0;\n                    let upperBound = researchFieldsViaJSON.length-1;\n                    initialIndexOfResearchFieldOfCurrentlyDisplayedArticles = Math.max(lowerBound, Math.min(parsedCurrentHash, upperBound));\n                }\n                this.setState({\n                    researchFields: researchFieldsViaJSON,\n                    indexOfResearchFieldOfCurrentlyDisplayedArticles: initialIndexOfResearchFieldOfCurrentlyDisplayedArticles,\n                    allResearchPaperJSONObjects: json,\n                    dataIsLoaded: true,\n                    sideNavigationBarIsOpen: false,\n                });\n            });\n    }\n\n    changeSideNavigationBarOpenState(){\n        let { sideNavigationBarIsOpen } = this.state;\n        let newSideNavigationBarOpenState = sideNavigationBarIsOpen ? false : true;\n        this.setState({\n            sideNavigationBarIsOpen: newSideNavigationBarOpenState,\n        });\n    }\n    \n    goToResearchFieldAtIndex(index) {\n        let { researchFields } = this.state;\n        let lowerBound = 0;\n        let upperBound = researchFields.length-1;\n        this.setState({\n            indexOfResearchFieldOfCurrentlyDisplayedArticles: Math.max(lowerBound, Math.min(index, upperBound)),\n        });\n    }\n    \n    goToNextResearchFieldMethod() {\n        let { researchFields, indexOfResearchFieldOfCurrentlyDisplayedArticles } = this.state;\n        let upperBound = researchFields.length-1;\n        let finalIndexOfResearchFieldOfCurrentlyDisplayedArticles = Math.min(indexOfResearchFieldOfCurrentlyDisplayedArticles+1, upperBound);\n        this.setState({\n            indexOfResearchFieldOfCurrentlyDisplayedArticles: finalIndexOfResearchFieldOfCurrentlyDisplayedArticles,\n        });\n    };\n    \n    goToPreviousResearchFieldMethod() {\n        let { indexOfResearchFieldOfCurrentlyDisplayedArticles } = this.state;\n        let lowerBound = 0;\n        let finalIndexOfResearchFieldOfCurrentlyDisplayedArticles = Math.max(indexOfResearchFieldOfCurrentlyDisplayedArticles-1, lowerBound);\n        this.setState({\n            indexOfResearchFieldOfCurrentlyDisplayedArticles: finalIndexOfResearchFieldOfCurrentlyDisplayedArticles,\n        });\n    };\n    \n    render() {\n        let { researchFields, indexOfResearchFieldOfCurrentlyDisplayedArticles, allResearchPaperJSONObjects, dataIsLoaded, sideNavigationBarIsOpen } = this.state;\n        let researchFieldOfCurrentlyDisplayedArticles = researchFields[indexOfResearchFieldOfCurrentlyDisplayedArticles];\n        if ( dataIsLoaded ) {\n            window.location.hash = '#'.concat(indexOfResearchFieldOfCurrentlyDisplayedArticles.toString());\n        }\n        return (\n            <div id=\"app\">\n              <LoadingScreen dataIsLoaded={dataIsLoaded}/>\n              { dataIsLoaded &&\n                <div id='loaded-content'>\n                  <HeaderRow\n                      goToResearchFieldAtIndexMethod={this.goToResearchFieldAtIndex}\n                      researchFields={researchFields}/>\n                  <SideNavigationBar\n                      goToResearchFieldAtIndexMethod={this.goToResearchFieldAtIndex}\n                      researchFields={researchFields}\n                      sideNavigationBarOpenStateChangingMethod={this.changeSideNavigationBarOpenState}\n                      sideNavigationBarIsOpen={sideNavigationBarIsOpen}/>\n                  <CenterFrame\n                      researchFieldOfCurrentlyDisplayedArticles={researchFieldOfCurrentlyDisplayedArticles}\n                      researchPaperJSONObjects={allResearchPaperJSONObjects}\n                      goToNextResearchFieldMethod={this.goToNextResearchFieldMethod}\n                      goToPreviousResearchFieldMethod={this.goToPreviousResearchFieldMethod}\n                      sideNavigationBarOpenStateChangingMethod={this.changeSideNavigationBarOpenState}\n                      sideNavigationBarIsOpen={sideNavigationBarIsOpen}\n                  />\n                </div>}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport {App} from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}